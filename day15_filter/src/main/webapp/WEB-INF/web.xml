<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!-- filter标签用于配置一个Filter过滤器 -->
    <filter>
        <!-- 给filter起一个别名  -->
        <filter-name>AdminFilter</filter-name>
        <!-- 配置filter的全类名 -->
        <filter-class>com.kai.day15_filter.AdminFilter</filter-class>
        <init-param>
            <param-name>username</param-name>
            <param-value>root</param-value>
        </init-param>
        <init-param>
            <param-name>url</param-name>
            <param-value>jdbc:mysql://localhost3306/test</param-value>
        </init-param>

    </filter>
    <!-- 配置filter过滤器的拦截路径 -->
    <filter-mapping>
        <!-- 表示当前的拦截路径给哪个filter使用 -->
        <filter-name>AdminFilter</filter-name>
        <!--  url-pattern配置拦截路径
                / 表示请求地址为：http://ip:port/工程路径 映射到IDEA 的web目录
                /admin/* 表示请求地址为 http://ip:port/工程路径/admin/*
                目录匹配
        -->
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>

    <!-- 重要：
                在多个Filter过滤器执行的时候，他们执行的优先顺序是由他们在web.xml中上到下配置的顺序决定！！！
         多个Filter过滤器执行的特点：
                1.所有filter和目标资源默认都执行在同一个线程中
                2.多个filter共同执行的时候，他们都是用同一个request域对象
     -->

    <filter>
        <filter-name>Filter1</filter-name>
        <filter-class>com.kai.day15_filter.Filter1</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter1</filter-name>
        <!-- 精确匹配
                表示请求地址为 http://ip:port/工程路径/target.jsp
         -->
        <url-pattern>/target.jsp</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>Filter2</filter-name>
        <filter-class>com.kai.day15_filter.Filter2</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter2</filter-name>
        <url-pattern>/target.jsp</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>Filter3</filter-name>
        <filter-class>com.kai.day15_filter.Filter3</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter3</filter-name>
        <!-- 后缀名匹配
                filter 过滤器它只关心请求的地址是否匹配，不关心请求的资源是否存在
                . 后面可以任意写
                表示请求地址必须以 .html结尾才会拦截到
                *.do
                *.action
                *.abc
         -->
        <url-pattern>*.html</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.kai.day15_filter.LoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/loginServlet</url-pattern>
    </servlet-mapping>


</web-app>